<mah:MetroWindow    
    x:Name="Fast"
    x:Class="SSHF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:SSHF.ViewModels.MainWindowViewModel"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"

             
    AllowsTransparency="True"
 
    WindowStyle="None"      
    Topmost="True" 
    WindowStartupLocation="CenterScreen"

  
   
 
 
  
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel, IsDesignTimeCreatable=True}"
   
    Background="{DynamicResource BackG}"
>
    <Window.Resources>
        <ImageBrush x:Key="BackG"  ImageSource="{Binding BackgroundImage}"/>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" CornerRadius="0" GlassFrameThickness="0" NonClientFrameEdges="None" ResizeBorderThickness="0" UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <!--d:DataContext="{d:DesignInstance vm:MainWindowViewModel, IsDesignTimeCreatable=True}"-->


    <!--<behaviors:Interaction.Triggers>

         Отправляем ссылку на самого себя в DataContext 
        <behaviors:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = GetThisWindow}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>
        
         Пререхватыаем эвент закрытия окна  
        <behaviors:EventTrigger EventName="Closing" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = NotClosingCommand}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>
        
         Скрываем окно по двойному клику 
        <behaviors:EventTrigger EventName="MouseDoubleClick" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = DoubleClickHideWindowCommand}" PassEventArgsToCommand="False"/>
        </behaviors:EventTrigger>
        
         изменение размеров окна 
        <behaviors:EventTrigger EventName="PreviewMouseWheel" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = MouseWheel}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>
        
         Дроп файла скриншота     
        <behaviors:EventTrigger EventName="PreviewMouseMove" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = DropImage}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>

         Вызываем рефреш окна по левому клику 
        <behaviors:EventTrigger EventName="MouseLeftButtonDown" SourceObject="{Binding ElementName=Fast}">
            <behaviors:InvokeCommandAction Command="{Binding Path = InvoceRefreshWindow}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>


    </behaviors:Interaction.Triggers>-->


    

</mah:MetroWindow>
